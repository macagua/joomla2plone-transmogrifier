[transmogrifier]
pipeline =
    joomla
    portal_type
    url_normalizer
    path
    publication_state
    text_mimetype
    mimetype_encapsulator
    description_to_text
    description_is_empty
    transform_description
    transform_text
#    debug_datetime
#    transform_datetime
    metakey_replace_separator
    join_subject_metakey
    encoding
    folders
    disable_versioning
    constructor
    enable_versioning
    logger
    schema_update
    workflow
    reindex_object
    savepoint
    print_key

# Declarative variables section
[settings]
# Path to use if there isn't one given
base_path =
nitf_path = articulos
poll_path = encuestas
content_path = contenidos
media_path = multimedia

# connection settings for database
user_db = root
password_db = root
host_db = localhost
name_db = joomla_transmog
#user_db = root
#password_db = superroot
#host_db = 192.168.0.133
#name_db = vtv_prueba_plone

# it's a prefix for every tables on database
prefix_db = jos

# pipeline encoding section for content types
# the encoding as the data is stored into database
encoding_from = iso-8859-1
#encoding_from = utf-8

# For options see http://pypi.python.org/pypi/transmogrify.sqlalchemy
[joomla]
blueprint = transmogrify.sqlalchemy
dsn = mysql://${settings:user_db}:${settings:password_db}@${settings:host_db}/${settings:name_db}

# For options see http://pypi.python.org/pypi/collective.transmogrifier
[portal_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
# We will add the value in the extended config, but we need a
# default set here
value = string:

[url_normalizer]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = title
destination-key = string:_id
locale = string:es

[path]
blueprint = collective.transmogrifier.sections.inserter
# only add a path if one does not exist
condition = python:'_path' not in item and not '_parent_path' in item
key = string:_path
# Add the value in the extended configuration
value = string:${settings:base_path}/${item/_id}

[publication_state]
blueprint = collective.transmogrifier.sections.inserter
condition = python:'_status' in item and item['_status'] == 1
key = string:_transitions
value = string:publish

# http://stackoverflow.com/questions/7257039/raw-html-in-body-text-after-importing-content-using-transmorgrifier/7257507#7257507
[text_mimetype]
# This could probably be taken from the database as well
blueprint = collective.transmogrifier.sections.inserter
key = string:_text_mimetype
#value = string:text/html
value = string:text/x-plone-outputfilters-html

[mimetype_encapsulator]
blueprint = plone.app.transmogrifier.mimeencapsulator
key = text
mimetype = python:item.get('_%s_mimetype', key)
field = key
condition = mimetype

# if jos_content.fulltext == '' then jos_content.fulltext = jos_content.introtext
[description_to_text]
blueprint = collective.transmogrifier.sections.inserter
condition = python: item.get('text') == ''
key = string:text
value = python: item['description']

# if jos_content.fulltext == jos_content.introtext then jos_content.fulltext = ''
[description_is_empty]
blueprint = collective.transmogrifier.sections.inserter
condition = python: item.get('description') ==  item.get('text')
key = string:description
value = string:

[transform_description]
blueprint = plone.app.transmogrifier.portaltransforms
from = text/html
target = text/plain
keys = description

[transform_text]
blueprint = plone.app.transmogrifier.portaltransforms
from = text/html
#target = text/x-plone-outputfilters-html
target = text/html
keys = text

[debug_datetime]
blueprint = collective.blueprint.pdb
condition = python: True

# ('creation_date', datetime.datetime(2012, 8, 5, 13, 34, 30)),
[transform_datetime]
blueprint = collective.transmogrifier.sections.inserter
condition = python: modules['pdb'].set_trace()
#item.has_key('creation_date')
key = string:creation_date
value = python: item['creation_date'].strftime("%Y/%m/%d %H:%M:%S")
#value = python: modules['datetime'].datetime(item['creation_date'])

# http://stackoverflow.com/questions/8083295/how-to-convert-a-string-into-a-datetime-in-a-trasmogrifier-step
[metakey_replace_separator]
blueprint = collective.transmogrifier.sections.inserter
condition = python: item.has_key('keywords')
key = string:keywords
value = python: item['keywords'].replace(',', '\n')

#suject = category + '\n ' + keyword
[join_subject_metakey]
blueprint = collective.transmogrifier.sections.inserter
condition = python: item.has_key('subject')
#condition = python: item['keywords'] is not None and item.has_key('subject')
key = string:subject
value = python: item['subject'] + '\n ' + item['keywords']

[encoding]
blueprint = collective.transmogrifier.sections.codec
keys =
    title
    description
    text
from = ${settings:encoding_from}
to = default
# strict ``replace`` and ``ignore``.
from-error-handler = ignore
to-error-handler = replace
#condition = python:item[key] is not None and isinstance(item[key], unicode)

[folders]
blueprint = collective.transmogrifier.sections.folders

[disable_versioning]
blueprint = plone.app.transmogrifier.versioning.disable

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[enable_versioning]
blueprint = plone.app.transmogrifier.versioning.enable

[logger]
blueprint = collective.transmogrifier.sections.logger
name = joomla2plone transmogrifier process item:
level = INFO
key = _path

[schema_update]
blueprint = plone.app.transmogrifier.atschemaupdater

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex_object]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 10

[print_key]
blueprint = transmogrify.print
#keys =
#    _path
#    creation_date

#[debug]
# Add this into the pipeline to get a pdb prompt for debugging
#blueprint = collective.transmogrifier.sections.inserter
#key = string:debug
#value = python:modules['pdb'].set_trace()
#condition = python:item.get('_path', '') == 'content/stronger-connection-out-customers'

#configuration.php
# /* Mail Settings */ mailhost.xml
# /* Site Settings */ .xml
# /* Meta Settings */ .xml
